@model ZLERP.Model.SupplyChain.V_PiaoOut
@section HeaderSection{
<script type="text/javascript" src="@Url.Content("~/Scripts/daterangepicker.jQuery.js")"></script>
<script src="@Url.Content("~/Scripts/Views/SupplyChain/SC_PiaoOut.js")" type="text/javascript" language="javascript"> </script>
    <script type="text/javascript">
        var options = {
            storeUrl: '@Url.Action("Find", "SC_PiaoOut")',
            ZhangstoreUrl: '@Url.Action("Find", "SC_ZhangOut")',
            GetZhangUrl: '@Url.Action("Get", "SC_Goods")',
            GetDepartUrl: '@Url.Action("GetDepart", "SC_PiaoOutOrder")',
            GenerateOrderNoUrl: '@Url.Action("GenerateOrderNo", "SC_PiaoOut")',
            ChangeConditionUrl: '@Url.Action("ChangeCondition")',
            PurOutUrl: '@Url.Action("PurOut")'
        };
        $(function () {
            SC_PiaoOutIndexInit(options);
        });
</script>
}
<div id="SC_PiaoOutGrid"></div> 

<div id="SC_PiaoOutForm" class="mvcform" style="display:none;">

@using (Html.BeginForm())
{@Html.ValidationSummary()
    @Html.HiddenFor(m => m.SC_PiaoOut.ID) 
    @Html.HiddenFor(m => m.SC_PiaoOut.DepartmentID)
<table class="mvcform"> 
    <tr> 
         <td>@Html.LabelFor(m => m.SC_PiaoOut.OutNo)@Html.TextBoxFor(m => m.SC_PiaoOut.OutNo, new { readOnly = true, @class = "inputReadOnly" }) </td>
         <td id="td_SC_PiaoOut_OutType">@Html.LabelFor(m => m.SC_PiaoOut.OutType)@Html.DropDownListFor(m => m.SC_PiaoOut.OutType, (IEnumerable<SelectListItem>)ViewBag.OutType, "", new { @class = "text", style = "width:135px;" })</td>
        
    </tr>
     <tr> 
        <td>@Html.LabelFor(m => m.SC_PiaoOut.UserID)@Html.DropDownListFor(m => m.SC_PiaoOut.UserID, (IEnumerable<SelectListItem>)ViewBag.Users, "", new { @class = "text", style = "width:120px;" })</td>
        <td>@Html.LabelFor(m => m.SC_PiaoOut.Department.DepartmentName)@Html.TextBoxFor(m => m.SC_PiaoOut.Department.DepartmentName, new { readOnly = true, @class = "inputReadOnly" })</td>
    </tr>
    <tr> 
        <td>@Html.LabelFor(m => m.SC_PiaoOut.OutDate)@Html.EditorFor(m => m.SC_PiaoOut.OutDate) </td>
        <td>@Html.LabelFor(m => m.SC_PiaoOut.LibID)@Html.DropDownListFor(m => m.SC_PiaoOut.LibID, (IEnumerable<SelectListItem>)ViewBag.Libs, "", new { @class = "text", style = "width:135px;" })</td>
    </tr> 
    <tr> 
      @*  <td>@Html.LabelFor(m => m.SC_PiaoOut.Evaluate)@Html.EditorFor(m => m.SC_PiaoOut.Evaluate)</td> *@
        <td>@Html.LabelFor(m => m.SC_PiaoOut.PiaoNo)@Html.EditorFor(m => m.SC_PiaoOut.PiaoNo)</td> 
    </tr>
    <tr> 
        <td colspan="2">@Html.LabelFor(m => m.SC_PiaoOut.Remark)@Html.TextAreaFor(m => m.SC_PiaoOut.Remark, new { style = "width:70%" }) </td>
    </tr> 
</table>
}
</div>
<div id="SC_ZhangOutGrid"></div> 

<div id="SC_ZhangOutForm" class="mvcform" style="display:none;">
@using (Html.BeginForm())
{@Html.ValidationSummary()
    @Html.HiddenFor(m => m.SC_ZhangOut.ID)
    @Html.HiddenFor(m => m.SC_ZhangOut.OutNo)
    @Html.HiddenFor(m => m.SC_ZhangOut.GoodsID)    
<table class="mvcform"> 
    <tr> 
        <td>@Html.LabelFor(m => m.SC_ZhangOut.GoodsID)@Html.AutoComplete("ID", "SC_ZhangOut.SC_Goods.GoodsName", "Combo", "SC_PiaoOut", "ID", "GoodsName", "IsOff=0", new { style = "width:120px" })</td> 
        <td>@Html.LabelFor(m => m.SC_ZhangOut.SC_Goods.Spec)@Html.TextBoxFor(m => m.SC_ZhangOut.SC_Goods.Spec, new { readOnly = true, @class = "inputReadOnly" })</td>
    </tr> 
    <tr>  
        <td>@Html.LabelFor(m => m.SC_ZhangOut.PriceUnit)@Html.TextBoxFor(m => m.SC_ZhangOut.PriceUnit, new { readOnly = true })</td>
@*        <td>@Html.LabelFor(m => m.SC_ZhangOut.SC_Goods.Unit)@Html.TextBoxFor(m => m.SC_ZhangOut.SC_Goods.Unit, new { readOnly = true })</td>*@
         <td >@Html.LabelFor(m => m.SC_ZhangOut.Unit)@Html.DropDownListFor(m => m.SC_ZhangOut.Unit, Enumerable.Empty<SelectListItem>(), new { style = "width:137px;", zlerp = "Combo" })
    </tr> 
    <tr> 
        <td>@Html.LabelFor(m => m.SC_ZhangOut.Quantity)@Html.EditorFor(m => m.SC_ZhangOut.Quantity)</td>
        <td>@Html.LabelFor(m => m.SC_ZhangOut.OutMoney)@Html.TextBoxFor(m => m.SC_ZhangOut.OutMoney, new { readOnly = true, @class = "inputReadOnly" })</td>
    </tr>
        <tr>
       <td>@Html.LabelFor(m => m.SC_ZhangOut.UnitRate)@Html.TextBoxFor(m => m.SC_ZhangOut.UnitRate, new { readOnly = true, @class = "inputReadOnly" })
           
       </td>
    </tr>
    <tr> 
        <td>@Html.LabelFor(m => m.SC_ZhangOut.PiNo)@Html.EditorFor(m => m.SC_ZhangOut.PiNo)</td> 
    </tr>
    <tr> 
        <td colspan="2">@Html.LabelFor(m => m.SC_ZhangOut.Remark)@Html.TextAreaFor(m => m.SC_ZhangOut.Remark, new { style = "width:80%" }) </td>
    </tr> 
</table>
}
</div>

 


@model ZLERP.Model.SupplyChain.SC_Fixed_Maintain
@section HeaderSection{
<script src="@Url.Content("~/Scripts/Views/SupplyChain/SC_Fixed_Maintain.js")" type="text/javascript" language="javascript"> </script>
    <script type="text/javascript">
        var options = {
            storeUrl: '@Url.Action("Find", "SC_Fixed_Maintain")',
            GenerateOrderNoUrl: '@Url.Action("GenerateOrderNo", "SC_Fixed_Maintain")',
            GetFixedUrl: '@Url.Action("Get", "SC_Fixed")',
            GetOutDel: '@Url.Action("Find", "SC_ZhangOut")',
        };
        $(function () {
            SC_Fixed_MaintainIndexInit(options);
        }); 
</script>
}
<div id="MyJqGrid" ></div>   
<div id="MyJqGridTo"></div> 
 
<div id="MyFormDiv" class="mvcform" style="display:none;">
@using (Html.BeginForm())
{@Html.ValidationSummary()
    @Html.HiddenFor(m => m.ID) 
    @Html.HiddenFor(m => m.FixedID)  
<table class="mvcform">  
    <tr> 
        <td>@Html.LabelFor(m => m.MaintainNo)@Html.TextBoxFor(m => m.MaintainNo, new { readOnly = true, @class = "inputReadOnly" }) </td>
    </tr>  
    <tr> 
         <td colspan="2"><hr/></td>
    </tr>
    <tr> 
         <td>@Html.LabelFor(m => m.Fname)@Html.AutoComplete("Fixed", "Fname", "Combo", "SC_Fixed_Circulate", "ID", "Fname", "1=1")</td> 
         <td>@Html.LabelFor(m => m.BarCode)@Html.TextBoxFor(m => m.BarCode, new { readOnly = true, @class = "inputReadOnly" }) </td>
    </tr> 
     <tr>   
        <td>@Html.LabelFor(m => m.Fcode)@Html.TextBoxFor(m => m.Fcode, new { readOnly = true, @class = "inputReadOnly" }) </td>
        <td>@Html.LabelFor(m => m.BrevityCode)@Html.TextBoxFor(m => m.BrevityCode, new { readOnly = true, @class = "inputReadOnly" }) </td>
    </tr> 
    <tr>   
        <td>@Html.LabelFor(m => m.DepartMent)@Html.TextBoxFor(m => m.DepartMent, new { readOnly = true, @class = "inputReadOnly" }) </td>
    </tr> 
    <tr> 
          <td colspan="2"><hr/></td>
    </tr>
     <tr> 
         <td>@Html.LabelFor(m => m.RepairType)@Html.DropDownListFor(m => m.RepairType, (IEnumerable<SelectListItem>)ViewBag.RepairTypes, new { @class = "text", style = "width:120px;" })</td> 
         <td>@Html.LabelFor(m => m.RepairWay)@Html.DropDownListFor(m => m.RepairWay, (IEnumerable<SelectListItem>)ViewBag.RepairWays, new { @class = "text", style = "width:120px;" })</td> 
    </tr>
    <tr> 
         <td>@Html.LabelFor(m => m.RepairDate)@Html.EditorFor(m => m.RepairDate)</td>
         <td>@Html.LabelFor(m => m.GiveMan)@Html.DropDownListFor(m => m.GiveMan, (IEnumerable<SelectListItem>)ViewBag.Users, "", new { @class = "text", style = "width:120px;" })</td> 
    </tr>
    <tr> 
         <td  colspan="2">@Html.LabelFor(m => m.FaultDesc)@Html.TextAreaFor(m => m.FaultDesc, new { style = "width:70%" })</td> 
    </tr> 
     <tr> 
         <td  colspan="2">@Html.LabelFor(m => m.RepairAdress)@Html.TextBoxFor(m => m.RepairAdress, new { style = "width:70%" })</td> 
    </tr>  
     <tr> 
           <td colspan="2"><hr/></td>
    </tr>  
    <tr id="HiddenIsOver"> 
         <td>@Html.LabelFor(m => m.IsOver)@Html.EditorFor(m => m.IsOver)</td> 
         <td>@Html.LabelFor(m => m.OverDate)@Html.EditorFor(m => m.OverDate)</td> 
    </tr> 
     <tr id="HiddenRepairMan"> 
         <td>@Html.LabelFor(m => m.RepairMan)@Html.EditorFor(m => m.RepairMan)</td>  
    </tr>  
    <tr id="HiddenRepairPirce"> 
         <td>@Html.LabelFor(m => m.RepairPirce)@Html.EditorFor(m => m.RepairPirce)</td> 
         <td>@Html.LabelFor(m => m.RepairTime)@Html.EditorFor(m => m.RepairTime)</td> 
    </tr> 
    <tr  id="HiddenRepairDesc"> 
         <td  colspan="2">@Html.LabelFor(m => m.RepairDesc)@Html.TextAreaFor(m => m.RepairDesc, new { style = "width:70%" })</td> 
    </tr>   
</table>
}
</div>


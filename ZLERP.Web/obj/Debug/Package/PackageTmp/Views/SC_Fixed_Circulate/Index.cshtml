@model ZLERP.Model.SupplyChain.SC_Fixed_Circulate
@section HeaderSection{
<script src="@Url.Content("~/Scripts/Views/SupplyChain/SC_Fixed_Circulate.js")" type="text/javascript" language="javascript"> </script>
    <script type="text/javascript">
        var options = {
            storeUrl: '@Url.Action("Find", "SC_Fixed_Circulate")', 
            GenerateOrderNoUrl: '@Url.Action("GenerateOrderNo", "SC_Fixed_Circulate")',
            GetFixedUrl: '@Url.Action("Get", "SC_Fixed")'
        };
        $(function () {
            SC_Fixed_CirculateIndexInit(options);
        }); 
</script>
}
<div id="MyJqGrid" ></div>   

 
<div id="MyFormDiv" class="mvcform" style="display:none;">
@using (Html.BeginForm())
{@Html.ValidationSummary()
    @Html.HiddenFor(m => m.ID) 
    @Html.HiddenFor(m => m.FixedID)  
<table class="mvcform">  
    <tr> 
        <td>@Html.LabelFor(m => m.CirculateNo)@Html.TextBoxFor(m => m.CirculateNo, new { readOnly = true, @class = "inputReadOnly" }) </td>
    </tr>  
    <tr>  
        <td colspan="2"><hr/></td>
    </tr>
    <tr> 
         <td>@Html.LabelFor(m => m.Fname)@Html.AutoComplete("Fixed", "Fname", "Combo", "SC_Fixed_Circulate", "ID", "Fname", "1=1")</td> 
         <td>@Html.LabelFor(m => m.BarCode)@Html.TextBoxFor(m => m.BarCode, new { readOnly = true, @class = "inputReadOnly" }) </td>
    </tr> 
     <tr>   
        <td>@Html.LabelFor(m => m.Fcode)@Html.TextBoxFor(m => m.Fcode, new { readOnly = true, @class = "inputReadOnly" }) </td>
        <td>@Html.LabelFor(m => m.BrevityCode)@Html.TextBoxFor(m => m.BrevityCode, new { readOnly = true, @class = "inputReadOnly" }) </td>
    </tr> 
    <tr>   
        <td>@Html.LabelFor(m => m.DepartMent)@Html.TextBoxFor(m => m.DepartMent, new { readOnly = true, @class = "inputReadOnly" }) </td>
    </tr> 
    <tr> 
        <td colspan="2"><hr/></td>
    </tr>
    <tr> 
         <td>@Html.LabelFor(m => m.BorrowDate)@Html.EditorFor(m => m.BorrowDate)</td>
         <td>@Html.LabelFor(m => m.ApproveMan)@Html.DropDownListFor(m => m.ApproveMan, (IEnumerable<SelectListItem>)ViewBag.Users, "", new { @class = "text", style = "width:120px;" })</td> 
    </tr>
     <tr> 
         <td>@Html.LabelFor(m => m.BorrowDepart)@Html.DropDownListFor(m => m.BorrowDepart, (IEnumerable<SelectListItem>)ViewBag.DepartMents, "", new { @class = "text", style = "width:120px;" })</td> 
         <td>@Html.LabelFor(m => m.BorrowMan)@Html.DropDownListFor(m => m.BorrowMan, (IEnumerable<SelectListItem>)ViewBag.Users, "", new { @class = "text", style = "width:120px;" })</td> 
    </tr>    
      <tr> 
         <td>@Html.LabelFor(m => m.MayBackDate)@Html.EditorFor(m => m.MayBackDate)</td> 
    </tr>  
       <tr> 
         <td  colspan="2">@Html.LabelFor(m => m.BorrowRemark)@Html.TextAreaFor(m => m.BorrowRemark, new { style = "width:70%" })</td> 
    </tr> 
     <tr> 
            <td colspan="2"><hr/></td>
    </tr>  
      <tr id="HiddenIsBack"> 
         <td>@Html.LabelFor(m => m.IsBack)@Html.EditorFor(m => m.IsBack)</td> 
         <td>@Html.LabelFor(m => m.BackDate)@Html.EditorFor(m => m.BackDate)</td> 
    </tr> 
    <tr  id="HiddenBackRemark"> 
         <td  colspan="2">@Html.LabelFor(m => m.BackRemark)@Html.TextAreaFor(m => m.BackRemark, new { style = "width:70%" })</td> 
    </tr>   
</table>
}
</div>


@model ZLERP.Model.SupplyChain.SC_Fixed_Shift 
@section HeaderSection{
<script src="@Url.Content("~/Scripts/Views/SupplyChain/SC_Fixed_Shift.js")" type="text/javascript" language="javascript"> </script>
    <script type="text/javascript">
        $(function () {
            sc_fixed_shiftIndexInit('@Url.Action("Find")');
        });
</script>
}
<div id="MyJqGrid"></div>
<div id="MyFormDiv" class="mvcform" style="display:none;">
@using (Html.BeginForm())
{@Html.ValidationSummary()
    <table class="mvcform"> 
        <tr> 
            <td>@Html.LabelFor(m => m.ShiftNo)@Html.TextBoxFor(m => m.ShiftNo, new { @readonly = "readonly" })</td>       
        </tr>
    
    </table>
    <br />
    <hr />
    <br />
    <table class="mvcform"> 
    <tr style="display:none;"> 
        <td>@Html.LabelFor(m => m.ID)@Html.EditorFor(m => m.ID)</td>  
    </tr>
    
    <tr>
         <td>@Html.LabelFor(m => m.FixedID)@Html.AutoComplete("FixedID", "ID", "Combo", "SC_Base", "ID", "Fcode", "1=1", new { style = "width:110px" })</td>
         <td>@Html.LabelFor(m => m.BarCode)@Html.TextBoxFor(m => m.BarCode, new { @readonly = "readonly", @class = "inputReadOnly" })</td>
    </tr>
    <tr> 
        <td>@Html.LabelFor(m => m.Fname)@Html.TextBoxFor(m => m.Fname, new { @readonly = "readonly", @class = "inputReadOnly" })</td>
        <td>@Html.LabelFor(m => m.BrevityCode)@Html.TextBoxFor(m => m.BrevityCode, new { @readonly = "readonly", @class = "inputReadOnly" })</td>
    </tr>
     <tr>
       <td style="display:none;">@Html.LabelFor(m => m.Ftype)@Html.TextBoxFor(m => m.Ftype, new { @readonly = "readonly", @class = "inputReadOnly" })</td>
       <td>@Html.LabelFor(m => m.Ftype)@Html.TextBoxFor(m => m.FTypeName, new { @readonly = "readonly", @class = "inputReadOnly" })</td>
       <td>@Html.LabelFor(m => m.DepartMent)@Html.TextBoxFor(m => m.DepartMent, new { @readonly = "readonly", @class = "inputReadOnly" })</td>
    </tr>
    <tr>        
        <td>@Html.LabelFor(m => m.Storeman)@Html.TextBoxFor(m => m.Storeman, new { @readonly = "readonly", @class = "inputReadOnly" })</td>
        <td>@Html.LabelFor(m => m.Position)@Html.TextBoxFor(m => m.Position, new { @readonly = "readonly", @class = "inputReadOnly" })</td>
    </tr>

    </table>
    <br />
    <hr />
    <br/>
    <table class="mvcform"> 
   
    <tr>        
        <td>@Html.LabelFor(m => m.ShiftDate)@Html.EditorFor(m => m.ShiftDate)</td>
        <td>@Html.LabelFor(m => m.ShiftMan)@Html.AutoCompleteFor(m => m.ID, m => m.ShiftMan, "combo", "Users", "ID", "TrueName", null, "IsUsed = 1")</td>
    </tr>

    <tr> 
        <td>@Html.LabelFor(m => m.ApproveMan)@Html.AutoCompleteFor(m => m.ID, m => m.ApproveMan, "combo", "Users", "ID", "TrueName", null, "IsUsed = 1")</td>
        <td>@Html.LabelFor(m => m.FtypeNew)@Html.DropDownTreeFor(m => m.FtypeNew, "FindTreeFixed", "SC_Goods")</td>  
        <td style="display:none;">@Html.LabelFor(m => m.Ftype)@Html.TextBoxFor(m => m.FTypeNameNew, new { @readonly = "readonly", @class = "inputReadOnly" })</td>    
    </tr>
      <tr> 
        <td>@Html.LabelFor(m => m.DepartMentNew)@Html.DropDownListFor(m => m.DepartMentNew, (IEnumerable<SelectListItem>)ViewBag.DepartMents, "", new { @class = "text", style = "width:137px;" })</td>
        <td>@Html.LabelFor(m => m.StoremanNew)@Html.AutoCompleteFor(m => m.ID, m => m.StoremanNew, "combo", "Users", "ID", "TrueName", null, "IsUsed = 1")</td>
    </tr>
    <tr> 
        <td>@Html.LabelFor(m => m.PositionNew)@Html.AutoComplete("ID", "PositionNew", "Combo", "SC_Fixed", "ID", "Position", "1=1", new { style = "width:107px" })</td>
   
    </tr>
    <tr>        
        <td colspan="2">@Html.LabelFor(m => m.Remark)@Html.TextAreaFor(m => m.Remark, 3, 55, new { })
        </td>
    </tr>


    <tr> 
        
    </tr>
    </table>

}
</div>

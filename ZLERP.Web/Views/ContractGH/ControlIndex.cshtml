@model ZLERP.Model.ViewModels.ContractGHAndItems
@section HeaderSection{
    <script src="@Url.Content("~/Scripts/ajaxfileupload.js")" type="text/javascript" language="javascript"> </script>
    <script src="@Url.Content("~/Scripts/Views/ContractGH/ControlIndex.js")" type="text/javascript" language="javascript"> </script>
    <script type="text/javascript">
        var limitObj = { limit0: "limit0", limit1: "limit1", limit2: "limit2", limit3: "limit3" };
        $(function () {
            contractIndexInit({
                ContractStoreUrl: '@Url.Action("Find")',
                contractUnAuditUrl: '@Url.Action("UnAudit")',
                itemDeleteUrl: '@Url.Action("Delete", "ContractItemGH")',
                itemStoreUrl: '@Url.Action("Find", "ContractItemGH")',
                itemUpdateUrl: '@Url.Action("Update", "ContractItemGH")',
                identityStoreUrl: '@Url.Action("Find", "IdentitySetting")',
                identityAddUrl: '@Url.Action("Add", "IdentitySetting")',
                identityUpdateUrl: '@Url.Action("Update", "IdentitySetting")',
                identityRowDeleteUrl: '@Url.Action("Delete", "IdentitySetting")',
                priceStoreUrl: '@Url.Action("Find", "PriceSettingGH")',
                priceAddUrl: '@Url.Action("Add", "PriceSettingGH")',
                priceUpdateUrl: '@Url.Action("Update", "PriceSettingGH")',
                priceRowDeleteUrl: '@Url.Action("Delete", "PriceSettingGH")',
                listDataUrl: '@Url.Action("ListData", "Identity")',
                contractOtherPriceStoreUrl: '@Url.Action("Find", "ContractOtherPrice")',
                otherPriceRowDeleteUrl: '@Url.Action("Delete", "ContractOtherPrice")',
                otherPriceAddUrl: '@Url.Action("Add", "ContractOtherPrice")',
                otherPriceUpdateUrl: '@Url.Action("Update", "ContractOtherPrice")',
                saveLockUrl: '@Url.Action("QuickLock")',
                getIdentityPriceUrl: '@Url.Action("getIdentityPrice")',
                uploadUrl: '@Url.Action("Upload", "Attachment")',
                deleteAttachmentUrl: '@Url.Action("Delete", "Attachment")',
                ProjectStoreUrl: '@Url.Action("Find", "ProjectGH")',
                ProjectUpdateUrl: '@Url.Action("Update", "ProjectGH")',
                listContractItemUrl: '@Url.Action("ListData", "ContractItemGH")',
                saveTaskIdentitiesUrl: '@Url.Action("SaveTaskIdentities", "ProduceTaskGH")',
                findIdentitySettingsUrl: '@Url.Action("FindIdentitySettings", "Identitysetting")',
                handleBatchAuditUrl: '@Url.Action("BatchAudit")',
                ProjectDeleteUrl: '@Url.Action("Delete", "ProjectGH")',
                AdvanceMoneyUpdateUrl: '@Url.Action("Update", "AdvanceMoney")',
                BitUpdatePriceUrl: '@Url.Action("BitUpdatePrice")',
                AdvanceMoneyStoreUrl: '@Url.Action("Find", "AdvanceMoney")'
            });
        });
        $("#formula-tabs").tabs({ fx: {}, selected: 0 });
        $("#formula-tabs2").tabs({ fx: {}, selected: 0 });
    </script>
}
@*合同表单*@
<div id="ContractForm" style="display: none;">
 
    @using (Html.BeginForm("", "", FormMethod.Post, new { encrypt = "multipart/form-data" }))
    {
        @Html.ValidationSummary()

        <table class="mvcform">
            <tr>               
                <td>@Html.TextBoxFor(m => m.ContractGH.ID, new { @class = "text", style = "display:none;" })@Html.LabelFor(m => m.ContractGH.CustName)@Html.AutoComplete("ContractGH.CustomerID", "ContractGH.CustName", "ComboByKey", "Customer", "ID", "ShortName", "CustName", "IsUse=1", null)
                </td>
                @*<td>@Html.LabelFor(m => m.ContractGH.ContractNo)@Html.TextBoxFor(m => m.ContractGH.ContractNo, new { @class = "text" })
                </td>*@
                <td>@Html.LabelFor(m => m.ContractGH.ContractName)@Html.TextBoxFor(m => m.ContractGH.ContractName, new { @class = "text" })
                </td>
                <td>@Html.LabelFor(m => m.ContractGH.ContractST)@Html.EditorFor(m => m.ContractGH.ContractST, "DateTimeWithTime")
                </td>
            </tr>
            <tr>
                <td>@Html.LabelFor(m => m.ContractGH.BuildUnit)@Html.TextBoxFor(m => m.ContractGH.BuildUnit, new { @class = "text" })
                </td>
                <td>@Html.LabelFor(m => m.ContractGH.ConstructUnit)@Html.TextBoxFor(m => m.ContractGH.ConstructUnit)
                </td>
                <td>@Html.LabelFor(m => m.ContractGH.ContractET)@Html.EditorFor(m => m.ContractGH.ContractET, "DateTimeWithTime")
                </td>
            </tr>
            <tr>
                <td>@Html.LabelFor(m => m.ContractGH.SignTotalCube)@Html.TextBoxFor(m => m.ContractGH.SignTotalCube, new { @data_val_required = "签订总方量 字段是必需的", data_val = "true" })
                </td>
                <td>@Html.LabelFor(m => m.ContractGH.SignTotalMoney)@Html.TextBoxFor(m => m.ContractGH.SignTotalMoney)
                </td>  
                <td>@Html.LabelFor(m => m.ContractGH.ProjectAddr)@Html.TextBoxFor(m => m.ContractGH.ProjectAddr)
                </td>  
            </tr>
            <tr>
                <td>@Html.LabelFor(m => m.ContractGH.SignDate)@Html.EditorFor(m => m.ContractGH.SignDate, "DateTime", new { defaultValue = @DateTime.Now.ToString("yyyy-MM-dd") })
                </td>
                <td>@Html.LabelFor(m => m.ContractGH.ContractType)@Html.DicEditorFor(m => m.ContractGH.ContractType, DicEnum.ContractType, new { style = "width:138px;" })
                </td>
                <td>@Html.LabelFor(m => m.ContractGH.ValuationType)@Html.DicEditorFor(m => m.ContractGH.ValuationType, DicEnum.ValuationType)
                </td>
                @**@
            </tr>
            <tr>
                <td>@Html.LabelFor(m => m.ContractGH.PaymentType)@Html.DicEditorFor(m => m.ContractGH.PaymentType, DicEnum.PaymentType)
                </td>
                <td>@Html.LabelFor(m => m.ContractGH.ContractStatus)@Html.DicEditorFor(m => m.ContractGH.ContractStatus, DicEnum.ContractStatus)
                </td>
                @*<td>@Html.LabelFor(m => m.ContractGH.Salesman)@Html.DropDownListFor(m => m.ContractGH.Salesman, (IEnumerable<SelectListItem>)ViewBag.Sales)
                </td>
                *@
                <td>@Html.LabelFor(m => m.ContractGH.Salesman)@Html.TextBoxFor(m => m.ContractGH.Salesman, new { @class = "text",  @data_val_required = "业务员 字段是必需的", data_val = "true" })
                </td>
            </tr>
            <tr>
                <td colspan="3">
                    <hr>
                </td>
            </tr>
            <tr>
                <td>
                    @Html.LabelFor(m => m.ContractGH.Distance)@Html.TextBoxFor(m => m.ContractGH.Distance, new { Value = "0" })
                </td>
                <td>
                    @Html.LabelFor(m => m.ContractGH.BasePrice)@Html.TextBoxFor(m => m.ContractGH.BasePrice, new { Value = "0" })
                </td>
            </tr>
            <tr>
                <td>@Html.LabelFor(m => m.ContractGH.PaidIn)@Html.TextBoxFor(m => m.ContractGH.PaidIn, new { Value = "0" })
                </td>
                <td>@Html.LabelFor(m => m.ContractGH.PrepayInit)@Html.TextBoxFor(m => m.ContractGH.PrepayInit, new { Value = "0" })
                </td>
                <td>@Html.LabelFor(m => m.ContractGH.PiaoPaidIn)@Html.TextBoxFor(m => m.ContractGH.PiaoPaidIn, new { Value = "0" })
                </td>
            </tr>
            <tr>
                <td>@Html.LabelFor(m => m.ContractGH.ALinkMan)@Html.TextBoxFor(m => m.ContractGH.ALinkMan, new { @class = "text" })
                </td>
                <td>@Html.LabelFor(m => m.ContractGH.ALinkTel)@Html.TextBoxFor(m => m.ContractGH.ALinkTel, new { @class = "text" })
                </td>
            </tr>
            <tr>
                <td colspan="3">@Html.LabelFor(m => m.ContractGH.Remark)@Html.TextAreaFor(m => m.ContractGH.Remark, new { style = "width:70%" })
                </td>
            </tr>
            <tr>
                <td colspan="2">
                        <label>
                            合同附件
                        </label>
                        <input type="file" id="uploadFile" name="upload" />
                        <div id="Attachments" style="clear: both;">
                        </div>
                </td>
            </tr>
        </table>
    }
    </div>
<div id="ContractItemGrid2" style="display: none;"></div>
<div  id="ProjectGrid2" style="display: none;"> </div>
 

@*导入泵车弹出框*@
<div id="ImportPumpForm" style="display:none;">
    <div id="pumpTypeGrid"></div>
</div>

@*合同审核*@
<div id="AuditForm" style="display: none;">
    @using (Html.BeginForm())
    {
        @Html.ValidationSummary()
        <table class="mvcform">
            <tr>
                <td>@Html.TextBoxFor(m => m.ContractGH.ID, new { @class = "text", style = "display:none;" })@Html.LabelFor(m => m.ContractGH.ContractName)@Html.TextBoxFor(m => m.ContractGH.ContractName, new { @class = "text" })
                </td>
            </tr>
            <tr>
                <td>@Html.LabelFor(m => m.ContractGH.SignTotalCube)@Html.TextBoxFor(m => m.ContractGH.SignTotalCube)
                </td>
            </tr>
            <tr>
                <td>@Html.LabelFor(m => m.ContractGH.SignTotalMoney)@Html.TextBoxFor(m => m.ContractGH.SignTotalMoney)
                </td>
            </tr>
            <tr>
                <td>@Html.LabelFor(m => m.ContractGH.ContractStatus)@Html.DicEditorFor(m => m.ContractGH.ContractStatus, DicEnum.ContractStatus)
                </td>
            </tr>
            <tr>
                <td>@Html.LabelFor(m => m.ContractGH.AuditStatus)@Html.DicEditorFor(m => m.ContractGH.AuditStatus, DicEnum.AuditStatus)
                </td>
            </tr>
            <tr>
                <td>@Html.LabelFor(m => m.ContractGH.AuditInfo)@Html.TextAreaFor(m => m.ContractGH.AuditInfo)
                </td>
            </tr>
        </table>
    }
</div>

@*合同明细表单*@
<div id="ContractItemForm" style="display: none;">
    @using (Html.BeginForm())
    {
        <table class="mvcform">
            <tr>
                <td>@Html.HiddenFor(m => m.ContractItemGH.ID, new { @class = "text" })
                </td>
            </tr>
            <tr>
                <td>@Html.LabelFor(m => m.ContractItemGH.ContractGH.ContractName)
                    @Html.HiddenFor(m => m.ContractItemGH.ContractID, new { @class = "text" })<span
                    id="ContractName_span" style="color: Red;"></span>@Html.DisplayTextFor(m => m.ContractItemGH.ContractID)
                </td>
            </tr>
            <tr>
                <td>@Html.LabelFor(m => m.ContractItemGH.ConStrength)@Html.DropDownListFor(m => m.ContractItemGH.ConStrength, (IEnumerable<SelectListItem>)ViewBag.ConStrength)
                </td>
            </tr>
            <tr>
                <td>@Html.Label("砼单价")@Html.TextBoxFor(m => m.ContractItemGH.UnPumpPrice, new { @class = "text" })
                </td>
            </tr>
            <tr>
                <td>@Html.Label("额外费")@Html.TextBoxFor(m => m.ContractItemGH.ExMoney, new { @class = "text" })
                </td>
            </tr>
            <tr style="display:none;">
                <td>@Html.LabelFor(m => m.ContractItemGH.PumpCost)@Html.TextBoxFor(m => m.ContractItemGH.PumpCost, new { @class = "text" })
                </td>
            </tr>
            <tr style="display:none;">
                <td>@Html.LabelFor(m => m.ContractItemGH.SlurryPrice)@Html.TextBoxFor(m => m.ContractItemGH.SlurryPrice, new { @class = "text" })
                </td>
            </tr>
        </table>
    }
</div>

@*额外泵送费设定*@
<div id="ExtraPumpForm" style="display: none;">
    @using (Html.BeginForm())
    {
        @Html.ValidationSummary()
        <table class="mvcform">
            <tr>
                <td colspan="2">
                    @Html.LabelFor(m => m.ExtraPump.ContractName)
                    @Html.HiddenFor(m => m.ExtraPump.ContractID, new { @class = "text" })
                    <span id="ContractName_ex" style="color: Red;"></span>
                </td>
            </tr>
            <tr>
                <td>@Html.LabelFor(m => m.ExtraPump.Type)@Html.DropDownListFor(m => m.ExtraPump.Type, (IEnumerable<SelectListItem>)ViewBag.ExtraPumpList)
                </td>
            </tr>
            <tr>
                <td>@Html.LabelFor(m => m.ExtraPump.Text)@Html.TextBoxFor(m => m.ExtraPump.Text)
                </td>
            </tr>
            <tr>
                <td>@Html.LabelFor(m => m.ExtraPump.Value)@Html.TextBoxFor(m => m.ExtraPump.Value)
                </td>
            </tr>
        </table>
    }
</div>

<div id="DivBitUpdatePriceGH" style="display: none;">
    @using (Html.BeginForm())
    {
        <table class="mvcform">
            <tr>
                <td>@Html.LabelFor(m => m.BitUpdatePrice.BitUpdateType)@Html.DropDownListFor(m => m.BitUpdatePrice.BitUpdateType, (IEnumerable<SelectListItem>)ViewBag.BitUpdatePrice)
                </td>
            </tr>
            <tr>
                <td>@Html.LabelFor(m => m.BitUpdatePrice.BitUpdateCnt)@Html.TextBoxFor(m => m.BitUpdatePrice.BitUpdateCnt)
                </td>
            </tr>
            <tr>
                <td>@Html.LabelFor(m => m.BitUpdatePrice.BitUpdateDate)@Html.EditorFor(m => m.BitUpdatePrice.BitUpdateDate, "DateTime", new { defaultValue = @DateTime.Now.ToString("yyyy-MM-dd") })
                </td>
            </tr>
        </table>
    }
</div>



@*价格变动表单*@
<div id="PriceSetForm" style="display: none;">
    @using (Html.BeginForm("Add1", "PriceSetting", FormMethod.Post, new { id = "PriceSetForms" }))
    {
        @Html.ValidationSummary()
        <table class="mvcform paddingStyle">
            <tr>
                <td colspan="4">
                @Html.TextBoxFor(m => m.PriceSetting.ID, new { @class = "text", style = " display:none;" })
                @Html.LabelFor(m => m.PriceSetting.ContractItemsID)
                @Html.HiddenFor(m => m.PriceSetting.ContractItemsID, new { @class = "text" })

                @Html.HiddenFor(m => m.ContractItemGH.BuildTime, new { @class = "text" })
                <span id="DisplayContractItemsID1"></span>
                <span id="DisplayContractItemsBTime" style="display:none"></span>
                
                </td>
                
            </tr>
            <tr>
               <td>
                砼基础单价：
                <input id="baseConsPrice" type="text" ReadOnly/>
               
               </td>
               <td style="display:none">
                  浮动<input id="freeRate" type="number" value='0'/>%
               </td>
            </tr>
            <tr>
                <td>@Html.LabelFor(m => m.PriceSetting.ChangeTime)
                </td>
                <td>@Html.LabelFor(m => m.PriceSetting.UnPumpPrice)
                </td>
                @*<td>@Html.LabelFor(m => m.PriceSetting.PumpCost)
                </td>
                <td>@Html.LabelFor(m => m.PriceSetting.SlurryPrice)
                </td>*@
            </tr>
            <tr>
                <td>@Html.EditorFor(m => m.PriceSetting.ChangeTime, "DateTimeWithTime")
                </td>
                <td>@Html.TextBoxFor(m => m.PriceSetting.UnPumpPrice)
                </td>
                @*<td>@Html.TextBoxFor(m => m.PriceSetting.PumpCost)
                </td>
                <td>@Html.TextBoxFor(m => m.PriceSetting.SlurryPrice)
                </td>*@
            </tr>
        </table>
    }
    <div style="height: 2px;">
    </div>
    <button class="tbtn add" title="合同管理/保存价格" role="button" aria-disabled="false" type="button"
        onclick="priceSave();return false;">
        <span class="ui-button-icon-primary ui-icon ui-icon-plus"></span><span class="ui-button-text">
            保存</span></button>
    <div id="priceSettingGrid">
    </div>
</div>

@*其他加价设定表格与表单*@
<div id="ContractOtherpriceGridAndForm" style="display: none;">
    <div id="contractOtherpriceGrid">
    </div>
    <div id="blank" style="height: 2px;">
    </div>
    <div id="contractOtherpriceForm" class="mvcform" style="width: 98%">
        @using (Html.BeginForm("Add1", "ContractOtherPrice", FormMethod.Post, new { id = "otherPriceForms" }))
        {@Html.ValidationSummary()
            <table class="mvcform paddingStyle">
                <tr>
                    <td>@Html.LabelFor(m => m.ContractOtherPrice.PriceType)
                    </td>
                    <td>@Html.LabelFor(m => m.ContractOtherPrice.CalcType)
                    </td>
                    <td>@Html.LabelFor(m => m.ContractOtherPrice.UnitPrice)
                    </td>
                    <td>
                        <div id="amountorper">@Html.LabelFor(m => m.ContractOtherPrice.Amount)</div>
                    </td>
                    <td align="center">@Html.LabelFor(m => m.ContractOtherPrice.IsAll)
                    </td>
                </tr>
                <tr>
                    <td>@Html.DicEditorFor(m => m.ContractOtherPrice.PriceType, DicEnum.PriceType, "")
                    </td>
                    <td>@Html.DicEditorFor(m => m.ContractOtherPrice.CalcType, DicEnum.CalcType, "")
                    </td>
                    <td>@Html.TextBoxFor(m => m.ContractOtherPrice.UnitPrice, new { Value = 0 })
                    </td>
                    <td>@Html.TextBoxFor(m => m.ContractOtherPrice.Amount, new { Value = 0 })
                    </td>
                    <td align="center">@Html.CheckBoxFor(m => m.ContractOtherPrice.IsAll, new { @checked = "true" })
                    </td>
                </tr>
                <tr>
                    <td colspan="5">
                        @Html.TextBoxFor(m => m.ContractOtherPrice.ID, new { @class = "text", style = "display:none;" })
                        @Html.HiddenFor(m => m.ContractOtherPrice.ContractID)
                        <button class="tbtn add" title="合同管理/保存其他加价" role="button" aria-disabled="false"
                            type="button" onclick="otherPriceSave();return false;">
                            <span class="ui-button-icon-primary ui-icon ui-icon-plus"></span><span class="ui-button-text">
                                保存</span></button>
                    </td>
                </tr>
            </table>

        }
    </div>
</div>

<div id="lockReasonForm" style="display: none;">
    @using (Html.BeginForm())
    { 
        @Html.ValidationSummary()
        <table class="mvcform">
            <tr>
                <td valign="top" style="width: 60px;">
                    锁定理由
                </td>
                <td>@Html.Hidden("ContractIDlock") @Html.TextAreaFor(m => m.ContractGH.Remark, 6, 40, new { @class = "text", id = "lockReason" })
                </td>
            </tr>
            <tr>
                <td colspan="2" align="right">
                    <button class="tbtn add" title="合同管理/锁定合同" role="button" aria-disabled="false" type="button"
                        onclick="lockSave();return false;">
                        <span class="ui-button-icon-primary ui-icon ui-icon-plus"></span><span class="ui-button-text">
                            确定</span></button>
                </td>
            </tr>
        </table>
    }
</div>

@*导入合同明细表单*@
<div id="ImportForm" style="display: none;">
    @using (Html.BeginForm())
    {
        <table class="mvcform">
            <tr>
                <td>@Html.LabelFor(m => m.ContractItemGH.ContractGH.ContractName)@Html.Hidden("contractID", null, new { @class = "text" })<span
                    id="ContractNameForImportForm" style="color: Red;"></span>@Html.DisplayTextFor(m => m.ContractItemGH.ContractID)
                </td>
            </tr>
             <tr>
               <td><label for="ConStrengthName" style="color:White;">搜索</label><input id="ConStrengthName" type="text" />
               <button class="ui-button ui-widget ui-state-default ui-corner-all ui-button-text-only ui-state-hover" title="搜索" role="button" aria-disabled="false" type ="button" onclick="SearchConStrength();return false;"><span class="ui-button-text">搜索</span></button>
               </td>
            </tr>
            <tr>
                <td>@Html.LabelFor(m => m.ContractItemGH.ConStrength)@Html.ListBox("conStrength", (IEnumerable<SelectListItem>)ViewBag.ConStrength, new { style = "width:180px; height:200px" })
                </td>
            </tr>
           
        </table>
    }
</div>

@*任务单表单*@
<div id="ProduceTaskForm" style="display: none;">
    <div id="ProduceTaskFormLeftDiv" style="float: left; width: 80%">
        @using (Html.BeginForm())
        {
            @Html.ValidationSummary()
            <table class="mvcform">
                <tr>
                    <td>@Html.LabelFor(m => m.ProduceTaskGH.CustName)@Html.TextBoxFor(m => m.ProduceTaskGH.CustName, new { @class = "text", readOnly = true })
                    </td>
                    <td>@Html.LabelFor(m => m.ProduceTaskGH.ContractName)@Html.TextBoxFor(m => m.ProduceTaskGH.ContractName, new { @class = "text", readOnly = true })@Html.HiddenFor(m => m.ProduceTaskGH.ContractID)
                    </td>
                    <td>@Html.LabelFor(m => m.ProduceTaskGH.ContractItemsID)@Html.DropDownListFor(m => m.ProduceTaskGH.ContractItemsID, Enumerable.Empty<SelectListItem>(), new { @data_val_required = "合同明细 字段是必需的", data_val = "true" })
                    </td>
                </tr>
                <tr>
                    <td>@Html.LabelFor(m => m.ProduceTaskGH.ProjectName)@Html.TextBoxFor(m => m.ProduceTaskGH.ProjectName, new { @class = "text", readOnly = true })@Html.HiddenFor(m => m.ProduceTaskGH.ProjectID)
                    </td>
                    <td>@Html.LabelFor(m => m.ProduceTaskGH.ProjectAddr)@Html.TextBoxFor(m => m.ProduceTaskGH.ProjectAddr)
                    </td> 
                </tr>
                <tr>
                    <td>@Html.LabelFor(m => m.ProduceTaskGH.ConstructUnit)@Html.TextBoxFor(m => m.ProduceTaskGH.ConstructUnit, new { @data_val_required = "施工单位 字段是必需的" })
                    </td>
                    <td>@Html.LabelFor(m => m.ProduceTaskGH.BuildUnit)@Html.TextBoxFor(m => m.ProduceTaskGH.BuildUnit)
                    </td>
                    <td>@Html.LabelFor(m => m.ProduceTaskGH.SupplyUnit)@Html.DicEditorFor(m => m.ProduceTaskGH.SupplyUnit, DicEnum.SupplyUnitSupplyUnit)
                    </td>
                </tr>
                <tr>
                    <td>@Html.LabelFor(m => m.ProduceTaskGH.LinkMan)@Html.DropDownListFor(m => m.ProduceTaskGH.LinkMan, (IEnumerable<SelectListItem>)ViewBag.LinkManList, new { style = "width:137px;" })
                    </td>
                    <td>@Html.LabelFor(m => m.ProduceTaskGH.Tel)@Html.TextBoxFor(m => m.ProduceTaskGH.Tel)
                    </td>
                    <td>@Html.LabelFor(m => m.ProduceTaskGH.SupplyUnitTel)@Html.TextBoxFor(m => m.ProduceTaskGH.SupplyUnitTel)
                    </td>
                </tr>
                <tr>
                    <td>@Html.LabelFor(m => m.ProduceTaskGH.CastMode)@Html.DicComboBoxFor(m => m.ProduceTaskGH.CastMode, DicEnum.CastMode)
                    </td>
                    <td>@Html.LabelFor(m => m.ProduceTaskGH.PumpType)@Html.DicEditorFor(m => m.ProduceTaskGH.PumpType, DicEnum.PumpType, "")
                    </td>
                    <td>@Html.LabelFor(m => m.ProduceTaskGH.Slump)@Html.DicComboBoxFor(m => m.ProduceTaskGH.Slump, DicEnum.Slump)
                    </td>
                </tr>
                <tr>
                    <td>@Html.LabelFor(m => m.ProduceTaskGH.NeedDate)@Html.EditorFor(m => m.ProduceTaskGH.NeedDate, "DateTimeWithTime", new { defaultValue = @DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss") })
                    </td>
                    <td>@Html.LabelFor(m => m.ProduceTaskGH.PlanCube)@Html.TextBoxFor(m => m.ProduceTaskGH.PlanCube)
                    </td>
                    <td>@Html.LabelFor(m => m.ProduceTaskGH.NeedTimes)@Html.TextBoxFor(m => m.ProduceTaskGH.NeedTimes)
                    </td>
                </tr>
                <tr>
                    <td>@Html.LabelFor(m => m.ProduceTaskGH.TaskType) 合同任务单 @Html.TextBoxFor(m => m.ProduceTaskGH.TaskType, new { style = "display:none", Value = "TCon" })
                    </td>
                    <td>@Html.LabelFor(m => m.ProduceTaskGH.ConsPosType)@Html.DicEditorFor(m => m.ProduceTaskGH.ConsPosType, DicEnum.ConsPos)
                    </td>
                    <td>@Html.LabelFor(m => m.ProduceTaskGH.ConsPos)@Html.TextBoxFor(m => m.ProduceTaskGH.ConsPos)
                    </td>
                </tr>
                <tr>
                    <td>@Html.LabelFor(m => m.ProduceTaskGH.CarpGrade)@Html.DicEditorFor(m => m.ProduceTaskGH.CarpGrade, DicEnum.JP)
                    </td>
                    <td>@Html.LabelFor(m => m.ProduceTaskGH.IsSlurry)@Html.CheckBoxFor(m => m.ProduceTaskGH.IsSlurry)
                    </td>
                    <td>@Html.LabelFor(m => m.ProduceTaskGH.BetonTag)@Html.TextBoxFor(m => m.ProduceTaskGH.BetonTag)
                    </td>
                </tr>
                <tr>
                    <td>@Html.LabelFor(m => m.ProduceTaskGH.CementType)@Html.DicEditorFor(m => m.ProduceTaskGH.CementType, DicEnum.CType)
                    </td>
                    <td colspan="2">@Html.LabelFor(m => m.ProduceTaskGH.OtherDemand)@Html.TextAreaFor(m => m.ProduceTaskGH.OtherDemand, 1, 50, null)
                    </td>
                </tr>
                <tr>
                    <td>@Html.LabelFor(m => m.ProduceTaskGH.CompPrincipal)@Html.TextBoxFor(m => m.ProduceTaskGH.CompPrincipal)
                    </td>
                    <td>@Html.LabelFor(m => m.ProduceTaskGH.ProductPrincipal)@Html.TextBoxFor(m => m.ProduceTaskGH.ProductPrincipal)
                    </td>
                    <td>@Html.LabelFor(m => m.ProduceTaskGH.Seller)@Html.DropDownListFor(m => m.ProduceTaskGH.Seller, (IEnumerable<SelectListItem>)ViewBag.Sales, null, null)
                    </td>
                </tr>
                <tr>
                    <td>@Html.LabelFor(m => m.ProduceTaskGH.IsCommission)@Html.CheckBoxFor(m => m.ProduceTaskGH.IsCommission)
                    </td>
                    <td colspan="2">@Html.LabelFor(m => m.ProduceTaskGH.Remark)@Html.TextAreaFor(m => m.ProduceTaskGH.Remark, 1, 50, new { @class = "text" })
                    </td>
                </tr>
                <tr>
                    <td>@Html.LabelFor(m => m.ProduceTaskGH.IdentityValue)@Html.TextBoxFor(m => m.ProduceTaskGH.IdentityValue)
                    </td>
                    <td>@Html.LabelFor(m => m.ProduceTaskGH.ImpGrade)@Html.TextBoxFor(m => m.ProduceTaskGH.ImpGrade)
                    </td>
                    <td>@Html.LabelFor(m => m.ProduceTaskGH.ImyGrade)@Html.TextBoxFor(m => m.ProduceTaskGH.ImyGrade)
                    </td>
                </tr>
                <tr>
                    <td>@Html.LabelFor(m => m.ProduceTaskGH.ImdGrade)@Html.TextBoxFor(m => m.ProduceTaskGH.ImdGrade)
                    </td>
                    <td>@Html.LabelFor(m => m.ProduceTaskGH.ForkLift)@Html.AutoComplete("ProduceTaskGH.TrueName", "ProduceTaskGH.ForkLift", "Combo", "User", "TrueName", "TrueName", "IsUsed=1 AND  UserType='50'", new { allowCache = false })
                    </td> 
                </tr>
            </table>
        }
    </div>
    <div id="ProduceTaskFormRightDiv" style="float: right; width: 19%">
    </div>
</div>

@*修改合同状态*@
<div id="editCStausForm" style="display: none;">
    @using (Html.BeginForm())
    { 
        @Html.ValidationSummary()
        <table class="mvcform">
            <tr>
                <td>
                    @Html.TextAreaFor(m => m.ContractGH.ID, new { style = "display:none" })
                    @Html.LabelFor(m => m.ContractGH.ContractStatus)@Html.DicEditorFor(m => m.ContractGH.ContractStatus, DicEnum.ContractStatus)

                </td>
            </tr>
        </table>
    }
</div>
@*运费调价*@
<div id="divShipDocRefreshPrice" style="display:none">
    @using (Html.BeginForm())
    { 
        @Html.ValidationSummary()
        <table class="mvcform">
            <tr>
                <td>
                    @Html.LabelFor(m => m.ShipDocRefreshPriceGH.ContractID)
                    @Html.TextBoxFor(m => m.ShipDocRefreshPriceGH.ContractID, new { @readonly = "readonly" })
                </td>
            </tr>
            <tr>
                <td>
                    @Html.LabelFor(m => m.ShipDocRefreshPriceGH.BeginDate)
                    @Html.EditorFor(m => m.ShipDocRefreshPriceGH.BeginDate, "DateTimeWithTime", new { defaultValue = @DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss") })
                </td>
                <td>
                    @Html.LabelFor(m => m.ShipDocRefreshPriceGH.EndDate)
                    @Html.EditorFor(m => m.ShipDocRefreshPriceGH.EndDate, "DateTimeWithTime", new { defaultValue = @DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss") })
                </td>
            </tr>
        </table>
    }
</div>
<div id="buttonToolbar">
</div>
<div id="Contractid">
</div>
@*<div id="ContractItemGrid" style="float: left; width: 29%">
</div>
<div id="ExtraPumpGrid" style="float: left; width: 29%">
</div>
<div  id="ContractPumpGrid2" style="float: left; width: 29% ;display:none;">
    
</div>
<div  id="ProjectGrid" style="float: left; width: 29%">
    
</div>*@

<div id="formula-tabs2" style="float: right; width: 100%;">
    <ul>
        <li><a href="#ContractItemGrid" id="idinfo21">明细列表</a></li> 
        <li><a href="#ProjectGrid" id="idinfo22">工程列表</a></li> 
    </ul>
     <div id="ContractItemGrid"  class="mvcform" >  </div>   
      <div id="ProjectGrid"  class="mvcform" > </div> 
</div>


